/**  Isomorphic Strings

Solution
Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true **/



class Solution {
    public String[] findRestaurant(String[] list1, String[] list2) {
        Map<Integer,List<String>> mapOfList1=new HashMap<Integer,List<String>>();
        List<String> newList2=Arrays.asList(list2);
         int sumOfIndex=0;
        for(int i=0;i<list1.length;i++){
           if(newList2.contains(list1[i])){
                sumOfIndex=(newList2.indexOf(list1[i])+i);
                 if(!mapOfList1.containsKey(sumOfIndex)){
                     mapOfList1.put(sumOfIndex,new ArrayList<String>());
                 }
            mapOfList1.get(sumOfIndex).add(list1[i]);
           }
         }
        int min=Collections.min(mapOfList1.keySet());
        String[] str=new String[mapOfList1.get(min).size()];
        return mapOfList1.get(min).toArray(str);
        
    }
}
